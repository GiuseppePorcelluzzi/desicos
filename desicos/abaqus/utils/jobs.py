def print_waitForCompletion( study_dir, jobnames, tmpf):
    tmpf.write( "import time\n" )
    tmpf.write( "import os\n" )
    tmpf.write( "import sys\n" )
    tmpf.write( "import inspect\n" )
    tmpf.write( "from subprocess import Popen\n" )
    tmpf.write( "abspath = os.path.abspath(inspect.getfile(inspect.currentframe()))\n" )
    tmpf.write( "CURDIR = os.path.dirname(abspath)\n" )
    tmpf.write( "output_dir = os.path.join(r'" + study_dir + "','outputs')\n" )
    tmpf.write( "os.chdir( output_dir )\n" )
    tmpf.write( "class Logger(object):\n" )
    tmpf.write( "    def __init__(self):\n" )
    tmpf.write( "        self.terminal = sys.stdout\n" )
    tmpf.write( "        self.log_path = os.path.join(CURDIR,'run_log.txt')\n" )
    tmpf.write( "        log = open( self.log_path, 'w' )\n" )
    tmpf.write( r"        log.write( 'RUN LOG FILE\n\n' )" + "\n" )
    tmpf.write( "        log.close()\n" )
    tmpf.write( "\n" )
    tmpf.write( "    def write( self, message):\n" )
    tmpf.write( "        self.terminal.write( message )\n" )
    tmpf.write( "        log = open( self.log_path, 'a' )\n" )
    tmpf.write( "        log.write( message )\n" )
    tmpf.write( "        log.close()\n" )
    tmpf.write( "sys.stdout = Logger()\n" )
    tmpf.write( "use_stopper=False\n")
    tmpf.write( "if 'use_stopper' in sys.argv:\n" )
    tmpf.write( "    use_stopper=True\n" )
    tmpf.write( "    sys.argv.pop( sys.argv.index('use_stopper') )\n" )
    tmpf.write( "if 'gui' in sys.argv:\n" )
    tmpf.write( "    sys.argv.pop( sys.argv.index('gui') )\n" )
    tmpf.write( "else:\n" )
    tmpf.write( "    os.system( 'title Running ABAQUS jobs in %s' % sys.argv[0] )\n" )
    tmpf.write( "\n" )
    tmpf.write( "jobnames = [\\\n" )
    for jobname in jobnames:
        tmpf.write( "            '" + jobname + "'" + ",\n" )
    tmpf.write( "           ]\n" )
    tmpf.write( "total = len(jobnames)\n" )
    tmpf.write( "job_counter = 0\n" )
    tmpf.write( "for jobname in jobnames:\n" )
    tmpf.write( "    job_counter += 1\n" )
    tmpf.write( "    #checking if job input file exists\n" )
    tmpf.write( "    tmp = os.path.join( output_dir, jobname + '.inp' )\n" )
    tmpf.write( "    if not os.path.isfile( tmp ):\n" )
    tmpf.write( "        print ('Not found .inp  for: %s at' % jobname), time.ctime()\n" )
    tmpf.write( "        continue\n" )
    tmpf.write( "    #checking if job is already finished\n" )
    tmpf.write( "    tmp = os.path.join( output_dir, jobname + '.log' )\n" )
    tmpf.write( "    if os.path.isfile( tmp ):\n" )
    tmpf.write( "        msgfile = open( tmp, 'r' )\n" )
    tmpf.write( "        lines = msgfile.readlines()\n" )
    tmpf.write( "        msgfile.close()\n" )
    tmpf.write( "        if len( lines ) > 1:\n" )
    tmpf.write( "            if lines[-2].find('End Abaqus/Standard Analysis') > -1:\n" )
    tmpf.write( "                print ('Skipping: %s at' % jobname), time.ctime()\n" )
    tmpf.write( "                continue\n" )
    tmpf.write( "            elif lines[-1].find('Abaqus/Analysis exited with errors') > -1:\n" )
    tmpf.write( "                print ('Skipping (with ERRORS): %s at' % jobname), time.ctime()\n" )
    tmpf.write( "                continue\n" )
    tmpf.write( "    if os.path.isfile( ('%s.lck' % jobname) ):\n" )
    tmpf.write( "        os.system( 'del %s.lck' % jobname )\n" )
    tmpf.write( "    input_file = os.path.join( output_dir, jobname + '.inp' )\n" )
    tmpf.write( "    command = 'abaqus job=%s input=%s' % (jobname, input_file)\n" )
    tmpf.write( "    if len(sys.argv) > 1:\n" )
    tmpf.write( "        for i in range( 1, len(sys.argv) ):\n" )
    tmpf.write( "            command += ' '\n" )
    tmpf.write( "            command += sys.argv[ i ]\n" )
    tmpf.write( "    os.system( command )\n" )
    tmpf.write( "    print  '____________________'\n" )
    tmpf.write( "    print  ''\n" )
    tmpf.write( "    print 'Counter: job %05d out of %05d' % (job_counter, total)\n" )
    tmpf.write( "    print ('Started  ABAQUS for: %s at' % jobname), time.ctime()\n" )
    tmpf.write( "    stopper = 'not created yet'\n" )
    tmpf.write( "    while True:\n" )
    tmpf.write( "        if os.path.isfile( tmp ):\n" )
    tmpf.write( "            msgfile = open( tmp, 'r' )\n" )
    tmpf.write( "            lines = msgfile.readlines()\n" )
    tmpf.write( "            msgfile.close()\n" )
    tmpf.write( "            if len( lines ) > 1:\n" )
    tmpf.write( "                if lines[-2].find('End Abaqus/Standard Analysis') > -1:\n" )
    tmpf.write( "                    print ('Finished: %s at' % jobname), time.ctime()\n" )
    tmpf.write( "                    break\n" )
    tmpf.write( "                elif lines[-1].find('Abaqus/Analysis exited with errors') > -1:\n" )
    tmpf.write( "                    print ('Finished with ERRORS: %s at' % jobname),time.ctime()\n" )
    tmpf.write( "                    break\n" )
    tmpf.write( "        else:\n" )
    tmpf.write( "            time.sleep(3)\n" )
    tmpf.write( "        time.sleep(5)\n" )
    tmpf.write( "        if not use_stopper:\n")
    tmpf.write( "            continue\n")
    tmpf.write( "        if os.name == 'nt':\n")
    tmpf.write( "            if stopper == 'not created yet':\n")
    tmpf.write( "                stopper = Popen( r'python ..\\job_stopper.py %s %s' %\\\n")
    tmpf.write( "                                 (output_dir, jobname) )\n")
    tmpf.write( "            else:\n")
    tmpf.write( "                if stopper.poll() == 0:\n")
    tmpf.write( "                    stopper = Popen( r'python ..\\job_stopper.py %s %s' %\\\n")
    tmpf.write( "                                     (output_dir, jobname) )\n")
    tmpf.write( "        else:\n")
    tmpf.write( "            if stopper == 'not created yet':\n")
    tmpf.write( "                stopper = Popen( 'python ../job_stopper.py %s %s' %\\\n")
    tmpf.write( "                                 (output_dir, jobname) )\n")
    tmpf.write( "            else:\n")
    tmpf.write( "                if stopper.poll() == 0:\n")
    tmpf.write( "                    stopper = Popen( 'python ../job_stopper.py %s %s' %\\\n")
    tmpf.write( "                                 (output_dir, jobname) )\n")
    tmpf.write( "print  '____________________'\n" )
    tmpf.write( "print  ''\n" )
    tmpf.write( "os.system( 'title Completed ABAQUS jobs in %s' % sys.argv[0] )\n" )
    tmpf.write( "\n" )

